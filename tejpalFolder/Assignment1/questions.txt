Que. Why should you use Git?
-Git is the most commonly used version control system. Git tracks the changes you make to files,
 so you have a record of what has been done, and you can revert to specific versions should you
  ever need to. Git also makes collaboration easier, allowing changes by multiple people to all
   be merged into one source.
------------------------------------------------------------------------------------------

Que. What is the benefit of distributed version control?
-A distributed version control system (DVCS) brings a local copy of the complete repository to
every team member’s computer, so they can commit, branch, and merge locally. The server doesn’t
have to store a physical file for each branch — it just needs the differences between each commit
Distributed source code management systems, such as Git, Mercurial, and Bazaar, mirror the
repository and its entire history as a local copy on individual hard drives.Distributed version
control systems help software development teams create strong workflows and hierarchies, with
each developer pushing code changes to their own repository and maintainers setting a code review
process to ensure only quality code merges into the main repository.A DVCS can be puzzling,
especially if a team member is accustomed to centralized source code systems, because a
contributor can no longer rely on a server to resolve conflicts when merging and
has to resolve them locally, which can result in confusing merge commits. However, despite the
initial discomfort, a distributed source control system can ensure stable code development when 
multiple developers contribute to software development projects.
------------------------------------------------------------------------------------------

Que. What is the command for installing Git on your Linux system?
-You can install Git on Linux through the package management tool that comes with your distribution.

Linux
Git packages are available using apt.
It's a good idea to make sure you're running the latest version. To do so, Navigate to your command
prompt shell and run the following command to make sure everything is up-to-date: sudo apt-get update.
To install Git, run the following command: sudo apt-get install git.
Once the command output has completed, you can verify the installation by typing: git version.
Fedora
Git packages are available using dnf.
To install Git, navigate to your command prompt shell and run the following command: sudo dnf install git.
Once the command output has completed, you can verify the installation by typing: git version.
------------------------------------------------------------------------------------------

Que. Why should you set up user.name and user.email configuration? How do you set them up?
-When you make commits on your local system and push them to Bitbucket Cloud, the commit data determines 
which account name to attach to the push.

To ensure your commits in Bitbucket appear with your user account, it must meet two conditions:

You've configured Git with a global username/email address and an optional repository-specific username/email 
address, as described on this page.

You've added the email address as an email alias and validated it. See Set email aliases.

Otherwise, Bitbucket doesn't associate your account with the commit. Instead, the username attached to the commit 
will either be based on your computer username or only your DVCS username.

add git user and email:

$git config --global user.email "email"
$git config --global user.name "name"
------------------------------------------------------------------------------------------

Que. Can you define working directory, staging, repository and remote repository?

Que. Can you draw how documents move from one stage to another?
------------------------------------------------------------------------------------------

Que. How do you initialize a directory to be tracked by Git?
-git init: git init is a standard GIT command and it initializes the directory with a .git folder used for 
tracking versions of project artifacts.
------------------------------------------------------------------------------------------

Que. What does git satus do?
-The git status command displays the state of the working directory and the staging area.
 It lets you see which changes have been staged, which haven't, and which files aren't
 being tracked by Git. Status output does not show you any information regarding the
 committed project history
------------------------------------------------------------------------------------------

Que. What does git log do?
-The git log command shows a list of all the commits made to a repository. You can see the
 hash of each Git commit, the message associated with each commit, and more metadata. This
 command is useful for displaying the history of a repository.
------------------------------------------------------------------------------------------

Que. what does git add do?
-The git add command adds a change in the working directory to the staging area. It tells
 Git that you want to include updates to a particular file in the next commit.
------------------------------------------------------------------------------------------

Que. What does git commit do?
-Adding commits keep track of our progress and changes as we work. ... Git considers each
 commit change point or "save point". It is a point in the project you can go back to if
 you find a bug, or want to make a change.
------------------------------------------------------------------------------------------

Que.How to push file to remote repository?
-Git PUSH
The git push command is used to transfer or push the commit, which is made on a local branch
 in your computer to a remote repository like GitHub. The command used for pushing to GitHub
 is given below.
git push 'remote_name' 'branch_name'
In this tutorial, you'll be looking two different ways to PUSH to GitHub.
Using Command line to PUSH to GitHub
1. Creating a new repository.
    - You need to create a new repository and click on the plus sign.
    - Fill up all the required details, i.e., repository name, description and also make the
 repository public this time as it is free.

2. Open your Git Bash.
    - Git Bash can be downloaded in here, and it is a shell used to interface with the operating
 system which follows the UNIX command.
3. Create your local project in your desktop directed towards a current working directory.
    - pwd stands for 'print working directory', which is used to print the current directory.
    - Move to the specific path in your local computer by cd 'path_name'. The cd commands stand
 for 'change directory' and it is used to change to the working directory in your operating
 system, and to locate your file, 'path_name', i.e., C:/Users/Dell/Downloads/FaceDetect-master
 needs to be given. This command can identify the required file that you are looking to work with.


4. Initialize the git repository
    - Use git init to initialize the repository. It is used to create a new empty repository or
 directory consisting of files' with the hidden directory. '.git' is created at the top level
 of your project, which places all of the revision information in one place.

5. Add the file to the new local repository.
    - Use git add . in your bash to add all the files to the given folder.
    - Use git status in your bash to view all the files which are going to be staged to the first
 commit.


6. Commit the files staged in your local repository by writing a commit message.
    - You can create a commit message by git commit -m 'your message', which adds the change
 to the local repository.
    - git commit uses '-m' as a flag for a message to set the commits with the content where the full 
    description is included, and a message is written in an imperative sentence up to 50 characters long and 
    defining "what was changed", and "why was the change made".


7. Copy your remote repository's URL from GitHub.
    - The HTTPS or URL is copied from the given GitHub account, which is the place of the remote repository.

8. Add the URL copied, which is your remote repository to where your local content from your repository is pushed.
    - git remote add origin 'your_url_name'
    - In the above code, The 'origin' is the remote name, and the remote URL is 
    "https://github.com/Olivia-Smithcoder100/FaceDetection.git". You can see the remote as GitHub in 
    this case, and GitHub provides the URL for adding to the remote repository.
9. Push the code in your local repository to GitHub
    - git push -u origin master is used for pushing local content to GitHub.
    - In the code, the origin is your default remote repository name and '-u' flag is upstream, which 
    is equivalent to '-set-upstream.' and the master is the branch, name.upstream is the repository that 
    we have cloned the project.
    - Fill in your GitHub username and password.

10. View your files in your repository hosted on GitHub.
    - You can finally see the file hosted on GitHub.
------------------------------------------------------------------------------------------
Que.Why do you need branching?
-Essentially creating a timeline of versions of a project as it progresses, so that you can
 roll back to an earlier version in the event disaster strikes. The way git, and GitHub,
 manage this timeline — especially when more than one person is working in the project and
 making changes — is by using branches.
------------------------------------------------------------------------------------------

Que.Which command is used to create branch?
- $git branch [branch_name]
-The git branch command can be used to create a new branch. When you want to start a new
 feature, you create a new branch off main using git branch new_branch. Once created you
 can then use git checkout new_branch to switch to that branch.
------------------------------------------------------------------------------------------

Que.What does checkout means?
-Checkout is the command used to switch between the different branches of a GitHub repository.
 When a branch is checked out, all files in the working directory are updated to match the
 versions stored in that branch.
------------------------------------------------------------------------------------------

Que.How to delete branch?
// delete branch locally
git branch -d localBranchName

// delete branch remotely
git push origin --delete remoteBranchName 
------------------------------------------------------------------------------------------

Que. Why we create pull request?
-Pull requests are important because they help ensure that quality reviewed code is merged into GitHub repositories. Without PRs, messy and confusing code can easily run rampant in a code base. Each developers' style of programming will compound into a repository with wildly different standards of code.
------------------------------------------------------------------------------------------

Que. Why we do review?
-Good code reviews look at the change itself and how it fits into the codebase. They will look through the clarity of the title and description and “why” of the change. They cover the correctness of the code, test coverage, functionality changes, and confirm that they follow the coding guides and best practices
------------------------------------------------------------------------------------------

Que. When and who merge the pull request?
-Merge a pull request into the upstream branch when work is completed. Anyone with push access to the repository can complete the merge.